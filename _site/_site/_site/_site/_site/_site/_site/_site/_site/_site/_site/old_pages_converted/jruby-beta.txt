====== Getting Started with JRuby ======

===== Before starting =====

  * Do note that this is in a very early stage of development. See below for [[appcloud:jruby-beta#Known-Issues|known issues]].
  * Your application should use Bundler 1.0.1 or later to manage gems.
  * Gemfile must include glassfish (be sure that bundler resolves the version to 1.0.3 or later).

===== Preparing an existing Rails app =====

- An example snippet to your Gemfile:
<code>
source 'http://gems.engineyard.com'

if defined?(JRUBY_VERSION)
  gem 'activerecord-jdbc-adapter'
  gem 'jruby-openssl'
  gem 'jdbc-mysql', :require => false
  gem 'jdbc-sqlite3', :require => false
  gem 'glassfish'
else
  gem 'sqlite3-ruby', :require => 'sqlite3'
end
</code>

or, equivalently:

<code>
gem 'activerecord-jdbc-adapter', :platforms => :jruby
gem 'jruby-openssl', :platforms => :jruby
gem 'jdbc-mysql', :require => false, :platforms => :jruby
gem 'jdbc-sqlite3', :require => false, :platforms => :jruby
gem 'glassfish', :platforms => :jruby
gem 'sqlite3-ruby', :require => 'sqlite3', :platforms => :ruby
</code>

Then run these commands to update your Gemfile.lock:

<code>
rvm install jruby
rvm jruby
bundle install
glassfish .

git checkout -b jruby
git commit -a -m "Gemfile updated for jruby/glassfish"
git push origin jruby

rvm 1.8.7
gem install engineyard --pre --source http://gems.engineyard.com
</code>

If you are not using RVM, do this in ''$RAILS_ROOT'' to update ''Gemfile'':
<code>
jruby -S bundle bundle install
git add Gemfile*
git commit -m 'Update Gemfile* for JRuby'
git push
</code>
(Use branch of your choice.)

- ''config.ru'' needs to be modified to ''require 'bundler/setup''' correctly before the first use of ''Bundler'', like so:
<code>
# This file is used by Rack-based servers to start the application.

# Find the latest bundler and get started
require 'rbconfig'
$:.unshift(Dir[RbConfig::CONFIG["libdir"] + "/ruby/gems/1.8/gems/bundler-*/lib"].sort.last)
require 'bundler/setup'

require ::File.expand_path('../config/environment',  __FILE__)
run CloudstockDemo::Application
</code>
===== Steps =====


  - Choose "Quick Start" from the Server Management pane on the left. {{:appcloud:jruby-beta-1.png|}}
  - Click on Next.
  - Fill in the repository URI, choose the application type and version.
  - Also choose Framework Environment, JRuby as your Ruby Runtime, and Glassfish as your Web Server Stack. {{:appcloud:appcloud_add_application.jpg|}}
  - Click on Next.
  - You may be presented with a deploy key. In this case, install the deploy key in your repository as usual, and click Next.
  - If your application is running on Rails 3, Bundler will manage gems, so simply click next. Otherwise, add gems as necessary.
  - Click on Next.
  - Optionally add SSH key as usual.
  - Click on Next.
  - Choose your server configuration as usual, and click on "Boot This Configuration"
  - Note that this brings up the instances to a running state, but the application code is not deployed. To complete the application deployment, click on "Applications" in the environment box. {{:appcloud:appcloud_applications_tab.jpg|}}
  - Click on "Ship It" button. Note, change "HEAD" to your jruby branch if necessary. {{:appcloud:appcloud_deploy_button.jpg|}} Alternately, from the console. [[#known-issues|¶]] <code>ey deploy --ref HEAD --no-migrate</code>
  - If you have migrations you must run them manually via SSH:<code>ey ssh
cd /data/APPNAME/current
jruby -S rake db:migrate
  </code>
  - Back in the Instances tab, click on "HTTP" link to view your application. {{:appcloud:appcloud_http_button.jpg|}}

===== Known Issues =====

We are aware of these issues and working on identifying and fixing the causes.

§ Booting an environment does not completely deploy the application.

¶ The "rake" command is not using the correct platform. [ [[https://tickets.engineyard.com/issue/SD-3420|ticket]] ]

¤ Only one application is allowed. [ [[https://tickets.engineyard.com/issue/PL-2939|ticket]] ]

Also, not referenced above:

  * ''engingeyard'' gem is not supported on JRuby. There is a dependency on ''ruby-termios'' gem which depends on native C extension. This appears to have problems, even with the announced C extension support on JRuby.

===== EY Staff =====

  * [[https://engineyard.lighthouseapp.com/projects/19689-awsm/milestones/85152-jruby|JRuby Lighthouse Milestone]]