==== Default Application Load Balancing ====

An Internet Service of a particular type (HTTP, TCP, UDP, etc) is created on a public IP address/port combination (ex. 67.219.151.1:80). One or more slices are added as nodes to that internet service. Incoming traffic is distributed using a Least Connection (LC) algorithm to the internet service's nodes. 

==== Load Balancer Health Checks ====
The load balancer sends a health check poll every five seconds to each node. Three failed polls in a row will cause the load balancer to mark the failing node as down. Thirty seconds later and every thirty seconds after that, the load balancer will again poll the down node until it gets the expected response; one successful response will mark the node as up and return to the the five second polling behavior.

==== Persistence ====
Internet services have a persistence of 2 minutes by default. Any incoming traffic from a specific IP address (the source address) will be sent to the same node until 2 minutes of no activity from the source address has occurred. After that the destination node for incoming traffic for the source address will be re-calculated.

The persistence timeout can be lowered to 1 minute, or extended to 5 minutes, but it cannot be disabled.

==== HTTP Health Checks ====
The default health check polls are simple, partial TCP connections (or pings if the service is a UDP service). This doesn't cover all possible application failure scenarios.

If a more complex check is required we can setup a HTTP check, in which a HTTP HEAD request is made to each node on a specified interval. The HTTP checks can be configured to pass if a certain set of response codes are returned. The HTTP checks can also take a set of HTTP headers as part of their input (like Host or Accept).

HTTP health checks otherwise work as the default TCP health checks.

Please open a support ticket if you would like a HTTP health check setup for a particular internet service.

==== ECV Health Checks ====
These are similar to HTTP health checks, except that a HTTP GET is used and the resulting body is searched for a particular string. If the string is found in the body of the result the check passes. If not, the check fails.
